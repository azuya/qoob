---
title: Qoob's structure
active_menu: Qoob's structure
main_menu: user
---

<h1>Ð¡ontents</h1>
<ul>
	<li><a href="#storage">BuilderStorage - What it is</a></li>
    <li><a href="#fields">Field's the way they are designed</a></li>

</ul>

<h2 id="storage">BuilderStorage - What it is</h2>
<h2 id="fields">Field's the way they are designed</h2>
<p><b>Qoob.it</b> comes packed with a variety of fields. Each has his its own set of arguments that can alter what that field does.</p>
<p>Fields are blocks of arrays that represent the individual block options within a specific settings panel, set via a Settings array.</p>
<p>Each fields has arguments:</p>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td></td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>name</td>
<td>string</td>
<td></td>
<td>Unique name identifying the field. Must be different from all other field names.</td>
</tr>
<tr>
<td>label</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>default</td>
<td>string / int / array</td>
<td></td>
<td>Default field's value</td>
</tr>
</tbody>
</table>
<p>A basic example is shown below.</p>
<pre>
<code class="php hljs">"settings": [{
    "name": "header",
    "label": "Header",
    "type": "text",
    "default": "menu"
}, {
    "name": "show_image",
    "label": "Show pepper",
    "type": "checkbox",
    "default": 1
}]</code></pre>

<h3 id="fieldtext">Text</h3>
<p>The Text field accepts any form of text.</p>
<img src="img/field-text.png">
<h3>Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>name</td>
<td>string</td>
<td></td>
<td>Unique name identifying the field. Must be different from all other field names.</td>
</tr>
<tr>
<td>label</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>'text'</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>placeholder</td>
<td>string</td>
<td></td>
<td>Text to display in the input when n value is present.</td>
</tr>
<tr>
<td>default</td>
<td>string</td>
<td></td>
<td>Default field's value</td>
</tr>
</tbody>
</table>
<pre>
<code class="js hljs">{
    "name": "header",
    "label": "Header",
    "type": "text",
    "placeholder": "Enter header",
    "default": "About Us"
}</code></pre>
<h3>Texarea</h3>
<p>The Textarea field accepts any form of multi-line string input, including custom HTML.</p>
<img src="img/field-texarea.png">
<h3>Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>name</td>
<td>string</td>
<td></td>
<td>Unique name identifying the field. Must be different from all other field names.</td>
</tr>
<tr>
<td>label</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>placeholder</td>
<td>string</td>
<td></td>
<td>Text to display in the input when n value is present.</td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>'textarea'</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>default</td>
<td>string</td>
<td></td>
<td>Default field's value</td>
</tr>
</tbody>
</table>
<pre>
<code class="js hljs">{
    "name": "text",
    "label": "Text",
    "type": "textarea",
    "default": "At Pizza, we do not just make pizza. We make people's days. Pizza was built on the belief that pizza night should be special, and we carry that belief into everything we do."
}</code></pre>
<h3>Select</h3>
<p>There are two types select. The first type displays information in a drop-down field in single format.</p>
<img src="img/field-select.png">
<p>The second type allows you to display a set of color palettes that a block might use, giving your users a choice of colors.</p>
<img src="img/field-selectcolor.png">
<h3>Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>name</td>
<td>string</td>
<td></td>
<td>Unique name identifying the field. Must be different from all other field names.</td>
</tr>
<tr>
<td>label</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>'select'</td>
<td>Value identifying the field type.</td>
</tr>
<td>visible_color</td>
<td>string</td>
<td>"false"</td>
<td>Activate color palettes</td>
</tr>
<tr>
<td>options</td>
<td>array</td>
<td></td>
<td>Array of options in key pair format. The key ID represents the ID of the option.  The key val represents the text to appear in the selector. The key colorimage represents option color, value can be in hex or rgb format.</td>
</tr>
<tr>
<td>default</td>
<td>string</td>
<td></td>
<td>Default current select value</td>
</tr>
</tbody>
</table>
<pre>
<code class="js hljs">{
    "name": "position_image",
    "label": "Position image",
    "type": "select",
    "default": "top",
    "options": [{
        "id": "top",
        "val": "top image"
    }, {
        "id": "bottom",
        "val": "bottom image"
    }]
}</code></pre>
<h3>Example color palette</h3>
<pre>
<code class="js hljs">{
    "name": "bg_row",
    "label": "Background row",
    "type": "select",
    "visible_color": "true",
    "default": "white_row",
    "options": [{
        "id": "white_row",
        "colorimage": "rgb(255, 255, 255)",
        "val": "white row"
    },{
        "id": "black_row",
        "colorimage": "rgb(0, 0, 0)",
        "val": "black row"
    }]
}</code></pre>
<h3>Checkbox</h3>
<p>The Checkbox field may be used to offer a single check option.</p>
<img src="img/field-checkbox.png">
<h3>Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>name</td>
<td>string</td>
<td></td>
<td>Unique name identifying the field. Must be different from all other field names.</td>
</tr>
<tr>
<td>label</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>'checkbox'</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<tr>
<td>default</td>
<td>int</td>
<td></td>
<td>Int value 1 or 0</td>
</tr>
</tbody>
</table>
<pre>
<code class="js hljs">{
    "name": "show_image",
    "label": "Show image",
    "type": "checkbox",
    "default": 1
}</code></pre>
<h3>Color picker</h3>
<p>The color picker allows choose color for text, buttons etc.</p>
<img src="img/field-color.png">
<h3>Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>name</td>
<td>string</td>
<td></td>
<td>Unique name identifying the field. Must be different from all other field names.</td>
</tr>
<tr>
<td>label</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>'colorpicker'</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>colors</td>
<td>array</td>
<td></td>
<td>Add array to display a row of your own palette colors. The value can be in hex or rgb format.</td>
</tr>
<tr>
<tr>
<td>default</td>
<td>string</td>
<td></td>
<td>The value can be in hex or rgb format.</td>
</tr>
</tbody>
</table>
<pre>
<code class="js hljs">{
    "name": "color_text",
    "label": "Color text",
    "type": "colorpicker",
    "colors": [
        "rgb(0, 181, 50)",
        "rgb(255, 189, 0)"
    ],
    "default": "rgb(0, 181, 50)"
}</code></pre>
<h3>Media center</h3>
<p>With the Media center field, can create a new gallery of images by selecting existing images.</p>
<img src="img/field-color.png">
<h3>Arguments</h3>

<h3>Visible devices</h3>
<p>For faster mobile-friendly development, use this field for showing and hiding blocks on different devices.</p>
<img src="img/field-color.png">
<h3>Arguments</h3>